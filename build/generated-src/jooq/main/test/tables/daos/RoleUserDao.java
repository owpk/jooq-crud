/*
 * This file is generated by jOOQ.
 */
package test.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test.tables.RoleUser;
import test.tables.records.RoleUserRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleUserDao extends DAOImpl<RoleUserRecord, test.tables.pojos.RoleUser, Long> {

    /**
     * Create a new RoleUserDao without any configuration
     */
    public RoleUserDao() {
        super(RoleUser.ROLE_USER, test.tables.pojos.RoleUser.class);
    }

    /**
     * Create a new RoleUserDao with an attached configuration
     */
    public RoleUserDao(Configuration configuration) {
        super(RoleUser.ROLE_USER, test.tables.pojos.RoleUser.class, configuration);
    }

    @Override
    public Long getId(test.tables.pojos.RoleUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.RoleUser> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RoleUser.ROLE_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<test.tables.pojos.RoleUser> fetchById(Long... values) {
        return fetch(RoleUser.ROLE_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public test.tables.pojos.RoleUser fetchOneById(Long value) {
        return fetchOne(RoleUser.ROLE_USER.ID, value);
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.RoleUser> fetchRangeOfUserid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RoleUser.ROLE_USER.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<test.tables.pojos.RoleUser> fetchByUserid(Long... values) {
        return fetch(RoleUser.ROLE_USER.USERID, values);
    }

    /**
     * Fetch records that have <code>roleId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.RoleUser> fetchRangeOfRoleid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RoleUser.ROLE_USER.ROLEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>roleId IN (values)</code>
     */
    public List<test.tables.pojos.RoleUser> fetchByRoleid(Long... values) {
        return fetch(RoleUser.ROLE_USER.ROLEID, values);
    }
}
