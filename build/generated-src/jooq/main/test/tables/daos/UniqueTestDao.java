/*
 * This file is generated by jOOQ.
 */
package test.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test.tables.UniqueTest;
import test.tables.records.UniqueTestRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UniqueTestDao extends DAOImpl<UniqueTestRecord, test.tables.pojos.UniqueTest, Long> {

    /**
     * Create a new UniqueTestDao without any configuration
     */
    public UniqueTestDao() {
        super(UniqueTest.UNIQUE_TEST, test.tables.pojos.UniqueTest.class);
    }

    /**
     * Create a new UniqueTestDao with an attached configuration
     */
    public UniqueTestDao(Configuration configuration) {
        super(UniqueTest.UNIQUE_TEST, test.tables.pojos.UniqueTest.class, configuration);
    }

    @Override
    public Long getId(test.tables.pojos.UniqueTest object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UniqueTest.UNIQUE_TEST.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchById(Long... values) {
        return fetch(UniqueTest.UNIQUE_TEST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public test.tables.pojos.UniqueTest fetchOneById(Long value) {
        return fetchOne(UniqueTest.UNIQUE_TEST.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UniqueTest.UNIQUE_TEST.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchByName(String... values) {
        return fetch(UniqueTest.UNIQUE_TEST.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public test.tables.pojos.UniqueTest fetchOneByName(String value) {
        return fetchOne(UniqueTest.UNIQUE_TEST.NAME, value);
    }

    /**
     * Fetch records that have <code>val BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchRangeOfVal(String lowerInclusive, String upperInclusive) {
        return fetchRange(UniqueTest.UNIQUE_TEST.VAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>val IN (values)</code>
     */
    public List<test.tables.pojos.UniqueTest> fetchByVal(String... values) {
        return fetch(UniqueTest.UNIQUE_TEST.VAL, values);
    }

    /**
     * Fetch a unique record that has <code>val = value</code>
     */
    public test.tables.pojos.UniqueTest fetchOneByVal(String value) {
        return fetchOne(UniqueTest.UNIQUE_TEST.VAL, value);
    }
}
