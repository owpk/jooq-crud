/*
 * This file is generated by jOOQ.
 */
package test.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test.tables.Users;
import test.tables.records.UsersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersDao extends DAOImpl<UsersRecord, test.tables.pojos.Users, Long> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, test.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, test.tables.pojos.Users.class, configuration);
    }

    @Override
    public Long getId(test.tables.pojos.Users object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.Users> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Users.USERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<test.tables.pojos.Users> fetchById(Long... values) {
        return fetch(Users.USERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public test.tables.pojos.Users fetchOneById(Long value) {
        return fetchOne(Users.USERS.ID, value);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.Users> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<test.tables.pojos.Users> fetchByPhone(String... values) {
        return fetch(Users.USERS.PHONE, values);
    }

    /**
     * Fetch a unique record that has <code>phone = value</code>
     */
    public test.tables.pojos.Users fetchOneByPhone(String value) {
        return fetchOne(Users.USERS.PHONE, value);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.Users> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<test.tables.pojos.Users> fetchByEmail(String... values) {
        return fetch(Users.USERS.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public test.tables.pojos.Users fetchOneByEmail(String value) {
        return fetchOne(Users.USERS.EMAIL, value);
    }

    /**
     * Fetch records that have <code>phoneId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<test.tables.pojos.Users> fetchRangeOfPhoneid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Users.USERS.PHONEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phoneId IN (values)</code>
     */
    public List<test.tables.pojos.Users> fetchByPhoneid(Long... values) {
        return fetch(Users.USERS.PHONEID, values);
    }
}
